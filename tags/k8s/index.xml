<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>k8s on HLDay</title>
    <link>/tags/k8s/</link>
    <description>Recent content in k8s on HLDay</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 08 Mar 2022 15:51:07 +0800</lastBuildDate><atom:link href="/tags/k8s/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>K8S集群网络系统</title>
      <link>/post/k8s/k8s%E9%9B%86%E7%BE%A4%E7%BD%91%E7%BB%9C%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Tue, 08 Mar 2022 15:51:07 +0800</pubDate>
      
      <guid>/post/k8s/k8s%E9%9B%86%E7%BE%A4%E7%BD%91%E7%BB%9C%E7%B3%BB%E7%BB%9F/</guid>
      <description>集群网络系统是 Kubernetes 的核心部分，Kubernetes 的宗旨就是在应用之间共享机器。 通常来说，共享机器需要两个应用之间不能使用相同的端口，但是在多个应用开发者之间 去大规模地协调端口是件很困难的事情，尤其是还要让用户暴露在他们控制范围之外的集群级别的问题上。
动态分配端口也会给系统带来很多复杂度 - 每个应用都需要设置一个端口的参数， 而 API 服务器还需要知道如何将动态端口数值插入到配置模块中，服务也需要知道如何找到对方等等。 与其去解决这些问题，Kubernetes 选择了其他不同的方法。</description>
    </item>
    
    <item>
      <title>使用RBAC鉴权</title>
      <link>/post/k8s/%E4%BD%BF%E7%94%A8rbac%E9%89%B4%E6%9D%83/</link>
      <pubDate>Tue, 08 Mar 2022 15:51:07 +0800</pubDate>
      
      <guid>/post/k8s/%E4%BD%BF%E7%94%A8rbac%E9%89%B4%E6%9D%83/</guid>
      <description>基于角色（Role）的访问控制（RBAC）是一种基于组织中用户的角色来调节控制对 计算机或网络资源的访问的方法</description>
    </item>
    
  </channel>
</rss>
